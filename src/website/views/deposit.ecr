<style>
.deposit-address {
	padding: 2px;
	margin: 10px;

	user-select: all;
	-webkit-user-select: all;

	background-color: #DCDCDC;
	border-radius: 3px;
	color: black;
}

.deposit-addresses {
	display: flex;
	justify-content: space-around;
	flex-direction: column;
	align-items: center;
	min-height: 60%;
}

.deposit {
	display: flex;
	width: 50%;
	justify-content: space-between;
	align-items: center;
	padding: 2px;

	background-color: var(--c-grey-3);
}

.hidden {
	display: none;
}

.info p {
	display: none;

	background-color: #ffe4fd;
	padding: 2px;
	margin: 2px;
	border-radius: 2px;
}

.info button:hover + p {
	display: inline;
}

.alert {
	border-style: solid;
	border-radius: 5px;
	border-color: #FF4A4A;
	background-color: #DCDCDC;
	color: black;
	padding: 5px;
	margin: 10px;
}
</style>
<script>
function generateDeposit(event) {
  var coin = event.target["coin"].value
  var url = "/api/generate_deposit_address";
  var request = new XMLHttpRequest();
  request.open('POST', url, true);
  request.onload = function() {
	alert("Successfully generated Deposit Address. Keep in mind that it's one time use only")
  };

  request.onerror = function() {
	alert("Something went wrong. Please try again later")
  };

  request.onreadystatechange = function() {
	if (request.readyState == XMLHttpRequest.DONE) {
		document.getElementById("deposit-address-" + coin).textContent = request.response;
		document.getElementById("deposit-address-" + coin).classList.remove("hidden");
		document.getElementById("info-" + coin).classList.remove("hidden");
		document.getElementById("generate-deposit-" + coin).classList.add("hidden");
	}
  }

  request.send(new FormData(event.target));
  console.log("Sent")

  event.preventDefault();
}

document.addEventListener('DOMContentLoaded', (event) => {
	document.querySelectorAll(".generate-deposit").forEach (function(element) {
		element.addEventListener("submit", generateDeposit);
	})
})
</script>
<body>
	<title>Deposit</title>
	<% coins = TB::Data::Coin.read_all %>
	<% deposit_addresses = TB::Data::DepositAddress.read_all_active_for_account(user.to_i32) %>
	<div class="deposit-addresses">
		<div class="alert">
			<p>All deposit addresses are onetime use only! Don't use any of these addresses to receive from faucets, pools, etc.</p>
		</div>
		<% coins.each do |coin| %>
		<% coin = coin[1] %>
		<div class="deposit">
			<% address = deposit_addresses[coin.id]? %>
			<h2><%= coin.name_long %>:</h2>
			<p class="deposit-address <%= "hidden" unless address %>" id="deposit-address-<%= coin.id %>"><%= address ? address.address : "NULL" %></p>
			<div class="info <%= address ? nil : "hidden" %>" id="info-<%= coin.id %>">
				<button><svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="24" height="24"viewBox="0 0 24 24"><path d="M 12 2 C 6.4889971 2 2 6.4889971 2 12 C 2 17.511003 6.4889971 22 12 22 C 17.511003 22 22 17.511003 22 12 C 22 6.4889971 17.511003 2 12 2 z M 12 4 C 16.430123 4 20 7.5698774 20 12 C 20 16.430123 16.430123 20 12 20 C 7.5698774 20 4 16.430123 4 12 C 4 7.5698774 7.5698774 4 12 4 z M 11 7 L 11 9 L 13 9 L 13 7 L 11 7 z M 11 11 L 11 17 L 13 17 L 13 11 L 11 11 z"></path></svg></button>
				<p>Generated at <%= address ? address.created_time : nil %></p>
			</div>
			<form class="generate-deposit <%= "hidden" if address %>" id="generate-deposit-<%= coin.id %>">
				<input type="hidden" name="coin" value="<%= coin.id %>">
				<input type="hidden" name="authenticity_token" value="<%= env.session.string("csrf") %>">
				<button type="submit">Generate Deposit Address</button>
			</form>
		</div>
		<% end %>
	</div>
</body>